{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\notit\\\\code22\\\\projects\\\\senseapp\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Home from \"./pages/Home\";\nimport Navbar from \"./components/Navbar\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // This should be passed to the form and calendar component\n  const [date, setDate] = useState({\n    day: \"\",\n    month: \"\",\n    year: \"\",\n    date: \"\"\n  });\n  useEffect(() => {\n    let d = new Date();\n    // let today = {\n    //   day: d.getDate(),\n    //   month: d.getMonth() + 1,\n    //   year: d.getFullYear(),\n    //   date: (d.getMonth() + 1 + \"|\" + d.getDate() + \"|\" + d.getFullYear()),\n    // };\n\n    setDate({\n      // ...date,\n      // [name]: value\n      day: d.getDate(),\n      month: d.getMonth() + 1,\n      year: d.getFullYear(),\n      date: d.getMonth() + 1 + \"|\" + d.getDate() + \"|\" + d.getFullYear()\n    });\n    console.log(date);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      date: date,\n      setDate: setDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Home, {\n      date: date,\n      setDate: setDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"s/53pn0shOBTECca4USKlfQKKaM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Home","Navbar","React","useState","useEffect","App","date","setDate","day","month","year","d","Date","getDate","getMonth","getFullYear","console","log"],"sources":["C:/Users/notit/code22/projects/senseapp/client/src/App.js"],"sourcesContent":["import Home from \"./pages/Home\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nfunction App() {\r\n  // This should be passed to the form and calendar component\r\n  const [date, setDate] = useState({\r\n    day: \"\",\r\n    month: \"\",\r\n    year: \"\",\r\n    date: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    let d = new Date();\r\n    // let today = {\r\n    //   day: d.getDate(),\r\n    //   month: d.getMonth() + 1,\r\n    //   year: d.getFullYear(),\r\n    //   date: (d.getMonth() + 1 + \"|\" + d.getDate() + \"|\" + d.getFullYear()),\r\n    // };\r\n\r\n    setDate({\r\n      // ...date,\r\n      // [name]: value\r\n      day: d.getDate(),\r\n      month: d.getMonth() + 1,\r\n      year: d.getFullYear(),\r\n      date: d.getMonth() + 1 + \"|\" + d.getDate() + \"|\" + d.getFullYear(),\r\n    });\r\n\r\n    console.log(date);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar date={date} setDate={setDate} />\r\n      <Home date={date} setDate={setDate} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,SAASC,GAAG,GAAG;EAAA;EACb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC;IAC/BK,GAAG,EAAE,EAAE;IACPC,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE,EAAE;IACRJ,IAAI,EAAE;EACR,CAAC,CAAC;EAEFF,SAAS,CAAC,MAAM;IACd,IAAIO,CAAC,GAAG,IAAIC,IAAI,EAAE;IAClB;IACA;IACA;IACA;IACA;IACA;;IAEAL,OAAO,CAAC;MACN;MACA;MACAC,GAAG,EAAEG,CAAC,CAACE,OAAO,EAAE;MAChBJ,KAAK,EAAEE,CAAC,CAACG,QAAQ,EAAE,GAAG,CAAC;MACvBJ,IAAI,EAAEC,CAAC,CAACI,WAAW,EAAE;MACrBT,IAAI,EAAEK,CAAC,CAACG,QAAQ,EAAE,GAAG,CAAC,GAAG,GAAG,GAAGH,CAAC,CAACE,OAAO,EAAE,GAAG,GAAG,GAAGF,CAAC,CAACI,WAAW;IAClE,CAAC,CAAC;IAEFC,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,IAAI,EAAEA,IAAK;MAAC,OAAO,EAAEC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,eACxC,QAAC,IAAI;MAAC,IAAI,EAAED,IAAK;MAAC,OAAO,EAAEC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAClC;AAEV;AAAC,GApCQF,GAAG;AAAA,KAAHA,GAAG;AAsCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}