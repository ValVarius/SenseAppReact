{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\notit\\\\code22\\\\projects\\\\senseapp\\\\client\\\\src\\\\pages\\\\PdfPage\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { PDFDocument } from \"pdf-lib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [pdfFileData, setPdfFileData] = useState();\n  function readFileAsync(file) {\n    return new Promise((resolve, reject) => {\n      let reader = new FileReader();\n      reader.onload = () => {\n        resolve(reader.result);\n      };\n      reader.onerror = reject;\n      reader.readAsArrayBuffer(file);\n    });\n  }\n  function renderPdf(uint8array) {\n    const tempblob = new Blob([uint8array], {\n      type: \"application/pdf\"\n    });\n    const docUrl = URL.createObjectURL(tempblob);\n    setPdfFileData(docUrl);\n  }\n  function range(start, end) {\n    let length = end - start + 1;\n    return Array.from({\n      length\n    }, (_, i) => start + i - 1);\n  }\n  async function extractPdfPage(arrayBuff) {\n    const pdfSrcDoc = await PDFDocument.load(arrayBuff);\n    const pdfNewDoc = await PDFDocument.create();\n    const pages = await pdfNewDoc.copyPages(pdfSrcDoc, range(1, 4));\n    pages.forEach(page => pdfNewDoc.addPage(page));\n    const newpdf = await pdfNewDoc.save();\n    return newpdf;\n  }\n\n  // Execute when user select a file\n  const onFileSelected = async e => {\n    const fileList = e.target.files;\n    if ((fileList === null || fileList === void 0 ? void 0 : fileList.length) > 0) {\n      const pdfArrayBuffer = await readFileAsync(fileList[0]);\n      const newPdfDoc = await extractPdfPage(pdfArrayBuffer);\n      renderPdf(newPdfDoc);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      classNameName: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group-prepend\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-group-text\",\n            id: \"inputGroupFileAddon01\",\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-file\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"custom-file-input\",\n            id: \"inputGroupFile01\",\n            \"aria-describedby\": \"inputGroupFileAddon01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"custom-file-label\",\n            for: \"inputGroupFile01\",\n            children: \"Choose file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-selector\",\n        accept: \".pdf\",\n        onChange: onFileSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        style: {\n          display: \"block\",\n          width: \"100vw\",\n          height: \"90vh\"\n        },\n        title: \"PdfFrame\",\n        src: pdfFileData,\n        frameBorder: \"0\",\n        type: \"application/pdf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Home, \"lRhz6fD0rFJSUl+g5b2LfCpzvnQ=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","PDFDocument","Home","pdfFileData","setPdfFileData","readFileAsync","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsArrayBuffer","renderPdf","uint8array","tempblob","Blob","type","docUrl","URL","createObjectURL","range","start","end","length","Array","from","_","i","extractPdfPage","arrayBuff","pdfSrcDoc","load","pdfNewDoc","create","pages","copyPages","forEach","page","addPage","newpdf","save","onFileSelected","e","fileList","target","files","pdfArrayBuffer","newPdfDoc","display","width","height"],"sources":["C:/Users/notit/code22/projects/senseapp/client/src/pages/PdfPage/index.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { PDFDocument } from \"pdf-lib\";\r\n\r\nexport default function Home() {\r\n  const [pdfFileData, setPdfFileData] = useState();\r\n\r\n  function readFileAsync(file) {\r\n    return new Promise((resolve, reject) => {\r\n      let reader = new FileReader();\r\n      reader.onload = () => {\r\n        resolve(reader.result);\r\n      };\r\n      reader.onerror = reject;\r\n      reader.readAsArrayBuffer(file);\r\n    });\r\n  }\r\n\r\n  function renderPdf(uint8array) {\r\n    const tempblob = new Blob([uint8array], {\r\n      type: \"application/pdf\",\r\n    });\r\n    const docUrl = URL.createObjectURL(tempblob);\r\n    setPdfFileData(docUrl);\r\n  }\r\n\r\n  function range(start, end) {\r\n    let length = end - start + 1;\r\n    return Array.from({ length }, (_, i) => start + i - 1);\r\n  }\r\n\r\n  async function extractPdfPage(arrayBuff) {\r\n    const pdfSrcDoc = await PDFDocument.load(arrayBuff);\r\n    const pdfNewDoc = await PDFDocument.create();\r\n    const pages = await pdfNewDoc.copyPages(pdfSrcDoc, range(1, 4));\r\n    pages.forEach((page) => pdfNewDoc.addPage(page));\r\n    const newpdf = await pdfNewDoc.save();\r\n    return newpdf;\r\n  }\r\n\r\n  // Execute when user select a file\r\n  const onFileSelected = async (e) => {\r\n    const fileList = e.target.files;\r\n    if (fileList?.length > 0) {\r\n      const pdfArrayBuffer = await readFileAsync(fileList[0]);\r\n      const newPdfDoc = await extractPdfPage(pdfArrayBuffer);\r\n      renderPdf(newPdfDoc);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div classNameName=\"container\">\r\n        \r\n        <div className=\"input-group\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\" id=\"inputGroupFileAddon01\">\r\n              Upload\r\n            </span>\r\n          </div>\r\n          <div className=\"custom-file\">\r\n            <input\r\n              type=\"file\"\r\n              className=\"custom-file-input\"\r\n              id=\"inputGroupFile01\"\r\n              aria-describedby=\"inputGroupFileAddon01\"\r\n            />\r\n            <label className=\"custom-file-label\" for=\"inputGroupFile01\">\r\n              Choose file\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <input\r\n          type=\"file\"\r\n          id=\"file-selector\"\r\n          accept=\".pdf\"\r\n          onChange={onFileSelected}\r\n        />\r\n        <iframe\r\n          style={{ display: \"block\", width: \"100vw\", height: \"90vh\" }}\r\n          title=\"PdfFrame\"\r\n          src={pdfFileData}\r\n          frameBorder=\"0\"\r\n          type=\"application/pdf\"\r\n        ></iframe>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}