{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { copyStringIntoBuffer, numberToString } from \"../../utils/index\";\nimport PDFObject from \"./PDFObject\";\nvar PDFNumber = /** @class */function (_super) {\n  __extends(PDFNumber, _super);\n  function PDFNumber(value) {\n    var _this = _super.call(this) || this;\n    _this.numberValue = value;\n    _this.stringValue = numberToString(value);\n    return _this;\n  }\n  PDFNumber.prototype.asNumber = function () {\n    return this.numberValue;\n  };\n  /** @deprecated in favor of [[PDFNumber.asNumber]] */\n  PDFNumber.prototype.value = function () {\n    return this.numberValue;\n  };\n  PDFNumber.prototype.clone = function () {\n    return PDFNumber.of(this.numberValue);\n  };\n  PDFNumber.prototype.toString = function () {\n    return this.stringValue;\n  };\n  PDFNumber.prototype.sizeInBytes = function () {\n    return this.stringValue.length;\n  };\n  PDFNumber.prototype.copyBytesInto = function (buffer, offset) {\n    offset += copyStringIntoBuffer(this.stringValue, buffer, offset);\n    return this.stringValue.length;\n  };\n  PDFNumber.of = function (value) {\n    return new PDFNumber(value);\n  };\n  return PDFNumber;\n}(PDFObject);\nexport default PDFNumber;","map":{"version":3,"mappings":";AAAA,SAASA,oBAAoB,EAAEC,cAAc,QAAE;AAE/C,OAAOC,SAAS;AAEhB;EAAwBC;EAMtB,mBAAoBC,KAAa;IAAjC,YACEC,iBAAO;IACPC,KAAI,CAACC,WAAW,GAAGH,KAAK;IACxBE,KAAI,CAACE,WAAW,GAAGP,cAAc,CAACG,KAAK,CAAC;;EAC1C;EAEAK,4BAAQ,GAAR;IACE,OAAO,IAAI,CAACF,WAAW;EACzB,CAAC;EAED;EACAE,yBAAK,GAAL;IACE,OAAO,IAAI,CAACF,WAAW;EACzB,CAAC;EAEDE,yBAAK,GAAL;IACE,OAAOA,SAAS,CAACC,EAAE,CAAC,IAAI,CAACH,WAAW,CAAC;EACvC,CAAC;EAEDE,4BAAQ,GAAR;IACE,OAAO,IAAI,CAACD,WAAW;EACzB,CAAC;EAEDC,+BAAW,GAAX;IACE,OAAO,IAAI,CAACD,WAAW,CAACG,MAAM;EAChC,CAAC;EAEDF,iCAAa,GAAb,UAAcG,MAAkB,EAAEC,MAAc;IAC9CA,MAAM,IAAIb,oBAAoB,CAAC,IAAI,CAACQ,WAAW,EAAEI,MAAM,EAAEC,MAAM,CAAC;IAChE,OAAO,IAAI,CAACL,WAAW,CAACG,MAAM;EAChC,CAAC;EAnCMF,YAAE,GAAG,UAACL,KAAa;IAAK,WAAIK,SAAS,CAACL,KAAK,CAAC;EAApB,CAAoB;EAoCrD,gBAAC;CAAA,CArCuBF,SAAS;AAuCjC,eAAeO,SAAS","names":["copyStringIntoBuffer","numberToString","PDFObject","__extends","value","_super","_this","numberValue","stringValue","PDFNumber","of","length","buffer","offset"],"sources":["C:\\Users\\notit\\code22\\projects\\senseapp\\node_modules\\pdf-lib\\src\\core\\objects\\PDFNumber.ts"],"sourcesContent":["import { copyStringIntoBuffer, numberToString } from 'src/utils/index';\n\nimport PDFObject from 'src/core/objects/PDFObject';\n\nclass PDFNumber extends PDFObject {\n  static of = (value: number) => new PDFNumber(value);\n\n  private readonly numberValue: number;\n  private readonly stringValue: string;\n\n  private constructor(value: number) {\n    super();\n    this.numberValue = value;\n    this.stringValue = numberToString(value);\n  }\n\n  asNumber(): number {\n    return this.numberValue;\n  }\n\n  /** @deprecated in favor of [[PDFNumber.asNumber]] */\n  value(): number {\n    return this.numberValue;\n  }\n\n  clone(): PDFNumber {\n    return PDFNumber.of(this.numberValue);\n  }\n\n  toString(): string {\n    return this.stringValue;\n  }\n\n  sizeInBytes(): number {\n    return this.stringValue.length;\n  }\n\n  copyBytesInto(buffer: Uint8Array, offset: number): number {\n    offset += copyStringIntoBuffer(this.stringValue, buffer, offset);\n    return this.stringValue.length;\n  }\n}\n\nexport default PDFNumber;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}