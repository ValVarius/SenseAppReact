[{"C:\\Users\\notit\\code22\\projects\\senseapp\\client\\src\\index.js":"1","C:\\Users\\notit\\code22\\projects\\senseapp\\client\\src\\reportWebVitals.js":"2","C:\\Users\\notit\\code22\\projects\\senseapp\\client\\src\\App.js":"3","C:\\Users\\notit\\code22\\projects\\senseapp\\client\\src\\components\\Form\\index.js":"4","C:\\Users\\notit\\code22\\projects\\senseapp\\client\\src\\components\\Navbar\\index.js":"5","C:\\Users\\notit\\code22\\projects\\senseapp\\client\\src\\components\\Calendar\\index.js":"6","C:\\Users\\notit\\code22\\projects\\senseapp\\client\\src\\pages\\Home\\index.js":"7","C:\\Users\\notit\\code22\\projects\\senseapp\\client\\src\\utils\\API.js":"8","C:\\Users\\notit\\code22\\projects\\senseapp\\client\\src\\pages\\PdfPage\\index.js":"9","C:\\Users\\notit\\code22\\projects\\senseapp\\client\\src\\pages\\FoodPanel\\index.js":"10","C:\\Users\\notit\\code22\\projects\\senseapp\\client\\src\\pages\\FoodPanel\\menuStart.js":"11","C:\\Users\\notit\\code22\\projects\\senseapp\\client\\src\\components\\FoodPanel\\index.js":"12"},{"size":476,"mtime":1668713852729,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1668713852730,"results":"15","hashOfConfig":"14"},{"size":894,"mtime":1669658472642,"results":"16","hashOfConfig":"14"},{"size":11342,"mtime":1669660595462,"results":"17","hashOfConfig":"14"},{"size":694,"mtime":1668964871115,"results":"18","hashOfConfig":"14"},{"size":2750,"mtime":1668964871112,"results":"19","hashOfConfig":"14"},{"size":267,"mtime":1668964871116,"results":"20","hashOfConfig":"14"},{"size":845,"mtime":1669163344505,"results":"21","hashOfConfig":"14"},{"size":1400,"mtime":1669135762304,"results":"22","hashOfConfig":"14"},{"size":7790,"mtime":1669658182004,"results":"23","hashOfConfig":"14"},{"size":14936,"mtime":1669226144324,"results":"24","hashOfConfig":"14"},{"size":7986,"mtime":1669662612853,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"w9eyz1",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},"C:\\Users\\notit\\code22\\projects\\senseapp\\client\\src\\index.js",[],[],"C:\\Users\\notit\\code22\\projects\\senseapp\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\notit\\code22\\projects\\senseapp\\client\\src\\App.js",["65","66"],[],"import Home from \"./pages/Home\";\r\nimport PdfPage from \"./pages/PdfPage\";\r\nimport FoodPanel from \"./pages/FoodPanel\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nfunction App() {\r\n  // This should be passed to the form and calendar component\r\n  const [date, setDate] = useState({\r\n    day: \"\",\r\n    month: \"\",\r\n    year: \"\",\r\n    date: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    let d = new Date();\r\n    setDate({\r\n      day: d.getDate(),\r\n      month: d.getMonth() + 1,\r\n      year: d.getFullYear(),\r\n      date: d.getMonth() + 1 + \"|\" + d.getDate() + \"|\" + d.getFullYear(),\r\n    });\r\n  }, []);\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Navbar date={date} setDate={setDate} />\r\n      {date.day ? <Home date={date} setDate={setDate} /> : null}\r\n      {/* <FoodPanel/> */}\r\n      {/* <PdfPage/> */}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\notit\\code22\\projects\\senseapp\\client\\src\\components\\Form\\index.js",[],[],"C:\\Users\\notit\\code22\\projects\\senseapp\\client\\src\\components\\Navbar\\index.js",["67"],[],"C:\\Users\\notit\\code22\\projects\\senseapp\\client\\src\\components\\Calendar\\index.js",["68","69","70"],[],"C:\\Users\\notit\\code22\\projects\\senseapp\\client\\src\\pages\\Home\\index.js",["71","72"],[],"C:\\Users\\notit\\code22\\projects\\senseapp\\client\\src\\utils\\API.js",[],[],"C:\\Users\\notit\\code22\\projects\\senseapp\\client\\src\\pages\\PdfPage\\index.js",[],[],"C:\\Users\\notit\\code22\\projects\\senseapp\\client\\src\\pages\\FoodPanel\\index.js",[],[],"C:\\Users\\notit\\code22\\projects\\senseapp\\client\\src\\pages\\FoodPanel\\menuStart.js",[],[],[],"C:\\Users\\notit\\code22\\projects\\senseapp\\client\\src\\components\\FoodPanel\\index.js",["73"],[],"import React, { useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport API from \"../../utils/API\";\r\n// const { menuStart } = require(\"./menuStart.js\");\r\n\r\nexport default function FoodPanel(props) {\r\n  //   let matches = menu.filter(function(result) {\r\n  //     return (result.name).substring(0,searchedItem.length).toUpperCase() === searchedItem.toUpperCase()\r\n  // })\r\n  const [menu, setMenu] = useState();\r\n  const [searchedItem, setSearchedItem] = useState();\r\n\r\n  // setSearchedItem(\"\");\r\n\r\n  useEffect(() => {\r\n    API.getMenu().then((result) => {\r\n      setMenu(result.data);\r\n    });\r\n    console.log(props);\r\n  }, []);\r\n\r\n  // API.storeUserMenu(menuStart).then((newMeal) => {\r\n  //   console.log(newMeal.data);\r\n  // });\r\n\r\n  let handleSearch = (event) => {\r\n    setSearchedItem(event.target.value);\r\n  };\r\n  let addItem = (event) => {\r\n    props.setInfo((prevState) => ({\r\n      ...prevState,\r\n      food: props.food.concat(event.target.value),\r\n    }));\r\n    setSearchedItem(\"\");\r\n  };\r\n\r\n  return (\r\n    // <div className=\"container\" id=\"panelContainer\">\r\n    //   <div className=\"row\">\r\n    //     <div className=\"col\">\r\n    //       <h2 className=\"menutitle\"> Vegetables/Legumes</h2>\r\n    //       {menu\r\n    //         ? menu.map((item) => {\r\n    //             if (item.category === \"Vegetable\") {\r\n    //               return (\r\n    //                 <button\r\n    //                   type=\"button\"\r\n    //                   className=\"btn btn-success menubutton\"\r\n    //                   key={item._id}\r\n    //                 >\r\n    //                   {item.name}\r\n    //                 </button>\r\n    //               );\r\n    //             } else return \"\";\r\n    //           })\r\n    //         : \"\"}\r\n    //     </div>\r\n    //     <div className=\"col\">\r\n    //       <h2 className=\"menutitle\"> Fruit</h2>\r\n    //       {menu\r\n    //         ? menu.map((item) => {\r\n    //             if (item.category === \"Fruit\") {\r\n    //               return (\r\n    //                 <button\r\n    //                   type=\"button\"\r\n    //                   className=\"btn btn-success menubutton\"\r\n    //                   key={item._id}\r\n    //                 >\r\n    //                   {item.name}\r\n    //                 </button>\r\n    //               );\r\n    //             } else return \"\";\r\n    //           })\r\n    //         : \"\"}\r\n    //     </div>\r\n    //     <div className=\"col\">\r\n    //       <h2 className=\"menutitle\"> Meats</h2>\r\n    //       {menu\r\n    //         ? menu.map((item) => {\r\n    //             if (item.category === \"Meat\") {\r\n    //               return (\r\n    //                 <button\r\n    //                   type=\"button\"\r\n    //                   className=\"btn btn-success menubutton\"\r\n    //                   key={item._id}\r\n    //                 >\r\n    //                   {item.name}\r\n    //                 </button>\r\n    //               );\r\n    //             } else return \"\";\r\n    //           })\r\n    //         : \"\"}\r\n\r\n    //       <h2 className=\"menutitle\"> Dairy/Eggs</h2>\r\n    //       {menu\r\n    //         ? menu.map((item) => {\r\n    //             if (item.category === \"Dairy/Eggs\") {\r\n    //               return (\r\n    //                 <button\r\n    //                   type=\"button\"\r\n    //                   className=\"btn btn-success menubutton\"\r\n    //                   key={item._id}\r\n    //                 >\r\n    //                   {item.name}\r\n    //                 </button>\r\n    //               );\r\n    //             } else return \"\";\r\n    //           })\r\n    //         : \"\"}\r\n\r\n    //       <h2 className=\"menutitle\"> Grain/Starch</h2>\r\n    //       {menu\r\n    //         ? menu.map((item) => {\r\n    //             if (item.category === \"Grain/Starch\") {\r\n    //               return (\r\n    //                 <button\r\n    //                   type=\"button\"\r\n    //                   className=\"btn btn-success menubutton\"\r\n    //                   key={item._id}\r\n    //                 >\r\n    //                   {item.name}\r\n    //                 </button>\r\n    //               );\r\n    //             } else return \"\";\r\n    //           })\r\n    //         : \"\"}\r\n    //     </div>\r\n\r\n    //     <div className=\"col\">\r\n    //       <h2 className=\"menutitle\"> Herb/Spice</h2>\r\n    //       {menu\r\n    //         ? menu.map((item) => {\r\n    //             if (item.category === \"Herb/Spice\") {\r\n    //               return (\r\n    //                 <button\r\n    //                   type=\"button\"\r\n    //                   className=\"btn btn-success menubutton\"\r\n    //                   key={item._id}\r\n    //                 >\r\n    //                   {item.name}\r\n    //                 </button>\r\n    //               );\r\n    //             } else return \"\";\r\n    //           })\r\n    //         : \"\"}\r\n    //     </div>\r\n    //     <div className=\"col\">\r\n    //       <h2 className=\"menutitle\"> Seafood</h2>\r\n    //       {menu\r\n    //         ? menu.map((item) => {\r\n    //             if (item.category === \"Seafood\") {\r\n    //               return (\r\n    //                 <button\r\n    //                   type=\"button\"\r\n    //                   className=\"btn btn-success menubutton\"\r\n    //                   key={item._id}\r\n    //                 >\r\n    //                   {item.name}\r\n    //                 </button>\r\n    //               );\r\n    //             } else return \"\";\r\n    //           })\r\n    //         : \"\"}\r\n    //     </div>\r\n\r\n    //     <div className=\"col\">\r\n    //       <h2 className=\"menutitle\"> Nuts/OilsMiscFood</h2>\r\n    //       {menu\r\n    //         ? menu.map((item) => {\r\n    //             if (item.category === \"Nuts/OilsMiscFood\") {\r\n    //               return (\r\n    //                 <button\r\n    //                   type=\"button\"\r\n    //                   className=\"btn btn-success menubutton\"\r\n    //                   key={item._id}\r\n    //                 >\r\n    //                   {item.name}\r\n    //                 </button>\r\n    //               );\r\n    //             } else return \"\";\r\n    //           })\r\n    //         : \"\"}\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n\r\n    // container\r\n    <>\r\n      <div className=\"row\">\r\n        <input\r\n          //aria-label=\"Search Name\"\r\n          value={searchedItem ? searchedItem : \"\"}\r\n          name=\"searchedItem\"\r\n          type=\"text\"\r\n          placeholder=\"Search Item\"\r\n          onChange={handleSearch}\r\n        />\r\n      </div>\r\n      <div className=\"row\">\r\n        <select\r\n          className=\"form-select\"\r\n          aria-label=\"Default select example\"\r\n          id=\"category-select\"\r\n          // name=\"\"\r\n          // onChange={handleChange}\r\n        >\r\n          <option value=\"Vegetable\">Vegetables</option>\r\n          <option value=\"Fruit\">Fruit</option>\r\n          <option value=\"Meat\">Meats</option>\r\n          <option value=\"Dairy/Eggs\">Dairy/Eggs</option>\r\n          <option value=\"Grain/Starch\">Grain/Starch</option>\r\n          <option value=\"Herb/Spice\">Herb/Spice</option>\r\n          <option value=\"Seafood\">Seafood</option>\r\n          <option value=\"Nuts/OilsMiscFood\">Nuts/OilsMiscFood</option>\r\n        </select>\r\n      </div>\r\n      {searchedItem\r\n        ? menu.map((result) => {\r\n            //     return (result.name).substring(0,searchedItem.length).toUpperCase() === searchedItem.toUpperCase()\r\n\r\n            if (\r\n              result.name.substring(0, searchedItem.length).toUpperCase() ===\r\n              searchedItem.toUpperCase()\r\n            ) {\r\n              return (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-success menubutton\"\r\n                  key={result._id}\r\n                  name=\"food\"\r\n                  value={result.name}\r\n                  onClick={addItem}\r\n                >\r\n                  {result.name}\r\n                </button>\r\n              );\r\n            } else return \"\";\r\n          })\r\n        : \"\"}\r\n    </>\r\n  );\r\n}\r\n",{"ruleId":"74","severity":1,"message":"75","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":15},{"ruleId":"74","severity":1,"message":"78","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":17},{"ruleId":"79","severity":1,"message":"80","line":9,"column":9,"nodeType":"81","endLine":9,"endColumn":46},{"ruleId":"74","severity":1,"message":"82","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"84","line":38,"column":18,"nodeType":"76","messageId":"85","endLine":38,"endColumn":19},{"ruleId":"86","severity":1,"message":"87","line":56,"column":6,"nodeType":"88","endLine":56,"endColumn":8,"suggestions":"89"},{"ruleId":"74","severity":1,"message":"82","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"90","line":1,"column":27,"nodeType":"76","messageId":"77","endLine":1,"endColumn":36},{"ruleId":"86","severity":1,"message":"91","line":20,"column":6,"nodeType":"88","endLine":20,"endColumn":8,"suggestions":"92"},"no-unused-vars","'PdfPage' is defined but never used.","Identifier","unusedVar","'FoodPanel' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.date.day', 'props.date.month', and 'props.date.year'. Either include them or remove the dependency array.","ArrayExpression",["93"],"'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["94"],{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},"Update the dependencies array to be: [props.date.day, props.date.month, props.date.year]",{"range":"99","text":"100"},"Update the dependencies array to be: [props]",{"range":"101","text":"102"},[1687,1689],"[props.date.day, props.date.month, props.date.year]",[634,636],"[props]"]